// Code generated by goa v3.18.2, DO NOT EDIT.
//
// get by categories HTTP client types
//
// Command:
// $ goa gen go-scores/design

package client

import (
	getbycategories "go-scores/gen/get_by_categories"

	goa "goa.design/goa/v3/pkg"
)

// GetAggregatedScoresResponseBody is the type of the "get by categories"
// service "getAggregatedScores" endpoint HTTP response body.
type GetAggregatedScoresResponseBody struct {
	Meta *CategoryMetaResponseBody    `form:"meta,omitempty" json:"meta,omitempty" xml:"meta,omitempty"`
	Data []*CategoryScoreResponseBody `form:"data,omitempty" json:"data,omitempty" xml:"data,omitempty"`
}

// CategoryMetaResponseBody is used to define fields on response body types.
type CategoryMetaResponseBody struct {
	Periods    []*PeriodResponseBody   `form:"periods,omitempty" json:"periods,omitempty" xml:"periods,omitempty"`
	Categories []*CategoryResponseBody `form:"categories,omitempty" json:"categories,omitempty" xml:"categories,omitempty"`
}

// PeriodResponseBody is used to define fields on response body types.
type PeriodResponseBody struct {
	ID    *int   `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	Start *int64 `form:"start,omitempty" json:"start,omitempty" xml:"start,omitempty"`
	End   *int64 `form:"end,omitempty" json:"end,omitempty" xml:"end,omitempty"`
}

// CategoryResponseBody is used to define fields on response body types.
type CategoryResponseBody struct {
	ID   *int    `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
}

// CategoryScoreResponseBody is used to define fields on response body types.
type CategoryScoreResponseBody struct {
	CategoryID   *int                       `form:"category_id,omitempty" json:"category_id,omitempty" xml:"category_id,omitempty"`
	NumOfReviews *int                       `form:"num_of_reviews,omitempty" json:"num_of_reviews,omitempty" xml:"num_of_reviews,omitempty"`
	Periods      []*ScorePeriodResponseBody `form:"periods,omitempty" json:"periods,omitempty" xml:"periods,omitempty"`
	TotalScore   *float32                   `form:"total_score,omitempty" json:"total_score,omitempty" xml:"total_score,omitempty"`
}

// ScorePeriodResponseBody is used to define fields on response body types.
type ScorePeriodResponseBody struct {
	ID    *int     `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	Score *float32 `form:"score,omitempty" json:"score,omitempty" xml:"score,omitempty"`
}

// NewGetAggregatedScoresResultOK builds a "get by categories" service
// "getAggregatedScores" endpoint result from a HTTP "OK" response.
func NewGetAggregatedScoresResultOK(body *GetAggregatedScoresResponseBody) *getbycategories.GetAggregatedScoresResult {
	v := &getbycategories.GetAggregatedScoresResult{}
	v.Meta = unmarshalCategoryMetaResponseBodyToGetbycategoriesCategoryMeta(body.Meta)
	v.Data = make([]*getbycategories.CategoryScore, len(body.Data))
	for i, val := range body.Data {
		v.Data[i] = unmarshalCategoryScoreResponseBodyToGetbycategoriesCategoryScore(val)
	}

	return v
}

// ValidateGetAggregatedScoresResponseBody runs the validations defined on
// GetAggregatedScoresResponseBody
func ValidateGetAggregatedScoresResponseBody(body *GetAggregatedScoresResponseBody) (err error) {
	if body.Meta == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("meta", "body"))
	}
	if body.Data == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("data", "body"))
	}
	return
}
