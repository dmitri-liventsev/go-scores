// Code generated by goa v3.18.2, DO NOT EDIT.
//
// get overall gRPC server encoders and decoders
//
// Command:
// $ goa gen go-scores/design

package server

import (
	"context"
	getoverall "go-scores/gen/get_overall"
	get_overallpb "go-scores/gen/grpc/get_overall/pb"

	goagrpc "goa.design/goa/v3/grpc"
	"google.golang.org/grpc/metadata"
)

// EncodeGetOverallScoreResponse encodes responses from the "get overall"
// service "getOverallScore" endpoint.
func EncodeGetOverallScoreResponse(ctx context.Context, v any, hdr, trlr *metadata.MD) (any, error) {
	result, ok := v.(float32)
	if !ok {
		return nil, goagrpc.ErrInvalidType("get overall", "getOverallScore", "float32", v)
	}
	resp := NewProtoGetOverallScoreResponse(result)
	return resp, nil
}

// DecodeGetOverallScoreRequest decodes requests sent to "get overall" service
// "getOverallScore" endpoint.
func DecodeGetOverallScoreRequest(ctx context.Context, v any, md metadata.MD) (any, error) {
	var (
		message *get_overallpb.GetOverallScoreRequest
		ok      bool
	)
	{
		if message, ok = v.(*get_overallpb.GetOverallScoreRequest); !ok {
			return nil, goagrpc.ErrInvalidType("get overall", "getOverallScore", "*get_overallpb.GetOverallScoreRequest", v)
		}
	}
	var payload *getoverall.GetOverallScorePayload
	{
		payload = NewGetOverallScorePayload(message)
	}
	return payload, nil
}
