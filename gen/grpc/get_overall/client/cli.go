// Code generated by goa v3.18.2, DO NOT EDIT.
//
// get overall gRPC client CLI support package
//
// Command:
// $ goa gen go-scores/design

package client

import (
	"encoding/json"
	"fmt"
	getoverall "go-scores/gen/get_overall"
	get_overallpb "go-scores/gen/grpc/get_overall/pb"
)

// BuildGetOverallScorePayload builds the payload for the get overall
// getOverallScore endpoint from CLI flags.
func BuildGetOverallScorePayload(getOverallGetOverallScoreMessage string) (*getoverall.GetOverallScorePayload, error) {
	var err error
	var message get_overallpb.GetOverallScoreRequest
	{
		if getOverallGetOverallScoreMessage != "" {
			err = json.Unmarshal([]byte(getOverallGetOverallScoreMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"from\": \"2009-05-07\",\n      \"to\": \"1980-02-17\"\n   }'")
			}
		}
	}
	v := &getoverall.GetOverallScorePayload{
		From: message.From,
		To:   message.To,
	}

	return v, nil
}
