// Code generated by goa v3.18.2, DO NOT EDIT.
//
// get by tickets gRPC server encoders and decoders
//
// Command:
// $ goa gen go-scores/design

package server

import (
	"context"
	getbytickets "go-scores/gen/get_by_tickets"
	get_by_ticketspb "go-scores/gen/grpc/get_by_tickets/pb"

	goagrpc "goa.design/goa/v3/grpc"
	"google.golang.org/grpc/metadata"
)

// EncodeGetAggregatedScoresByTicketResponse encodes responses from the "get by
// tickets" service "getAggregatedScoresByTicket" endpoint.
func EncodeGetAggregatedScoresByTicketResponse(ctx context.Context, v any, hdr, trlr *metadata.MD) (any, error) {
	result, ok := v.(*getbytickets.GetAggregatedScoresByTicketResult)
	if !ok {
		return nil, goagrpc.ErrInvalidType("get by tickets", "getAggregatedScoresByTicket", "*getbytickets.GetAggregatedScoresByTicketResult", v)
	}
	resp := NewProtoGetAggregatedScoresByTicketResponse(result)
	return resp, nil
}

// DecodeGetAggregatedScoresByTicketRequest decodes requests sent to "get by
// tickets" service "getAggregatedScoresByTicket" endpoint.
func DecodeGetAggregatedScoresByTicketRequest(ctx context.Context, v any, md metadata.MD) (any, error) {
	var (
		message *get_by_ticketspb.GetAggregatedScoresByTicketRequest
		ok      bool
	)
	{
		if message, ok = v.(*get_by_ticketspb.GetAggregatedScoresByTicketRequest); !ok {
			return nil, goagrpc.ErrInvalidType("get by tickets", "getAggregatedScoresByTicket", "*get_by_ticketspb.GetAggregatedScoresByTicketRequest", v)
		}
	}
	var payload *getbytickets.GetAggregatedScoresByTicketPayload
	{
		payload = NewGetAggregatedScoresByTicketPayload(message)
	}
	return payload, nil
}
