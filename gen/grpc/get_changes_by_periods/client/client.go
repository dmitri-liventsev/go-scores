// Code generated by goa v3.18.2, DO NOT EDIT.
//
// get changes by periods gRPC client
//
// Command:
// $ goa gen go-scores/design

package client

import (
	"context"
	get_changes_by_periodspb "go-scores/gen/grpc/get_changes_by_periods/pb"

	goagrpc "goa.design/goa/v3/grpc"
	goa "goa.design/goa/v3/pkg"
	"google.golang.org/grpc"
)

// Client lists the service endpoint gRPC clients.
type Client struct {
	grpccli get_changes_by_periodspb.GetChangesByPeriodsClient
	opts    []grpc.CallOption
} // NewClient instantiates gRPC client for all the get changes by periods
// service servers.
func NewClient(cc *grpc.ClientConn, opts ...grpc.CallOption) *Client {
	return &Client{
		grpccli: get_changes_by_periodspb.NewGetChangesByPeriodsClient(cc),
		opts:    opts,
	}
} // GetChangesByPeriods calls the "GetChangesByPeriods" function in
// get_changes_by_periodspb.GetChangesByPeriodsClient interface.
func (c *Client) GetChangesByPeriods() goa.Endpoint {
	return func(ctx context.Context, v any) (any, error) {
		inv := goagrpc.NewInvoker(
			BuildGetChangesByPeriodsFunc(c.grpccli, c.opts...),
			EncodeGetChangesByPeriodsRequest,
			DecodeGetChangesByPeriodsResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			return nil, goa.Fault(err.Error())
		}
		return res, nil
	}
}
