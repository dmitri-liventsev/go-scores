// Code generated by goa v3.18.2, DO NOT EDIT.
//
// get by periods gRPC server
//
// Command:
// $ goa gen go-scores/design

package server

import (
	"context"
	getbyperiods "go-scores/gen/get_by_periods"
	get_by_periodspb "go-scores/gen/grpc/get_by_periods/pb"

	goagrpc "goa.design/goa/v3/grpc"
	goa "goa.design/goa/v3/pkg"
)

// Server implements the get_by_periodspb.GetByPeriodsServer interface.
type Server struct {
	GetByPeriodsH goagrpc.UnaryHandler
	get_by_periodspb.UnimplementedGetByPeriodsServer
}

// New instantiates the server struct with the get by periods service endpoints.
func New(e *getbyperiods.Endpoints, uh goagrpc.UnaryHandler) *Server {
	return &Server{
		GetByPeriodsH: NewGetByPeriodsHandler(e.GetByPeriods, uh),
	}
}

// NewGetByPeriodsHandler creates a gRPC handler which serves the "get by
// periods" service "getByPeriods" endpoint.
func NewGetByPeriodsHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, DecodeGetByPeriodsRequest, EncodeGetByPeriodsResponse)
	}
	return h
}

// GetByPeriods implements the "GetByPeriods" method in
// get_by_periodspb.GetByPeriodsServer interface.
func (s *Server) GetByPeriods(ctx context.Context, message *get_by_periodspb.GetByPeriodsRequest) (*get_by_periodspb.GetByPeriodsResponse, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "getByPeriods")
	ctx = context.WithValue(ctx, goa.ServiceKey, "get by periods")
	resp, err := s.GetByPeriodsH.Handle(ctx, message)
	if err != nil {
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*get_by_periodspb.GetByPeriodsResponse), nil
}
