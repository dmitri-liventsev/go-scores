// Code generated by goa v3.18.2, DO NOT EDIT.
//
// get by categories gRPC client encoders and decoders
//
// Command:
// $ goa gen go-scores/design

package client

import (
	"context"
	getbycategories "go-scores/gen/get_by_categories"
	get_by_categoriespb "go-scores/gen/grpc/get_by_categories/pb"

	goagrpc "goa.design/goa/v3/grpc"
	"google.golang.org/grpc"
	"google.golang.org/grpc/metadata"
)

// BuildGetAggregatedScoresFunc builds the remote method to invoke for "get by
// categories" service "getAggregatedScores" endpoint.
func BuildGetAggregatedScoresFunc(grpccli get_by_categoriespb.GetByCategoriesClient, cliopts ...grpc.CallOption) goagrpc.RemoteFunc {
	return func(ctx context.Context, reqpb any, opts ...grpc.CallOption) (any, error) {
		for _, opt := range cliopts {
			opts = append(opts, opt)
		}
		if reqpb != nil {
			return grpccli.GetAggregatedScores(ctx, reqpb.(*get_by_categoriespb.GetAggregatedScoresRequest), opts...)
		}
		return grpccli.GetAggregatedScores(ctx, &get_by_categoriespb.GetAggregatedScoresRequest{}, opts...)
	}
}

// EncodeGetAggregatedScoresRequest encodes requests sent to get by categories
// getAggregatedScores endpoint.
func EncodeGetAggregatedScoresRequest(ctx context.Context, v any, md *metadata.MD) (any, error) {
	payload, ok := v.(*getbycategories.GetAggregatedScoresPayload)
	if !ok {
		return nil, goagrpc.ErrInvalidType("get by categories", "getAggregatedScores", "*getbycategories.GetAggregatedScoresPayload", v)
	}
	return NewProtoGetAggregatedScoresRequest(payload), nil
}

// DecodeGetAggregatedScoresResponse decodes responses from the get by
// categories getAggregatedScores endpoint.
func DecodeGetAggregatedScoresResponse(ctx context.Context, v any, hdr, trlr metadata.MD) (any, error) {
	message, ok := v.(*get_by_categoriespb.GetAggregatedScoresResponse)
	if !ok {
		return nil, goagrpc.ErrInvalidType("get by categories", "getAggregatedScores", "*get_by_categoriespb.GetAggregatedScoresResponse", v)
	}
	if err := ValidateGetAggregatedScoresResponse(message); err != nil {
		return nil, err
	}
	res := NewGetAggregatedScoresResult(message)
	return res, nil
}
