// Code generated by goa v3.18.2, DO NOT EDIT.
//
// get by categories gRPC server encoders and decoders
//
// Command:
// $ goa gen go-scores/design

package server

import (
	"context"
	getbycategories "go-scores/gen/get_by_categories"
	get_by_categoriespb "go-scores/gen/grpc/get_by_categories/pb"

	goagrpc "goa.design/goa/v3/grpc"
	"google.golang.org/grpc/metadata"
)

// EncodeGetAggregatedScoresResponse encodes responses from the "get by
// categories" service "getAggregatedScores" endpoint.
func EncodeGetAggregatedScoresResponse(ctx context.Context, v any, hdr, trlr *metadata.MD) (any, error) {
	result, ok := v.(*getbycategories.GetAggregatedScoresResult)
	if !ok {
		return nil, goagrpc.ErrInvalidType("get by categories", "getAggregatedScores", "*getbycategories.GetAggregatedScoresResult", v)
	}
	resp := NewProtoGetAggregatedScoresResponse(result)
	return resp, nil
}

// DecodeGetAggregatedScoresRequest decodes requests sent to "get by
// categories" service "getAggregatedScores" endpoint.
func DecodeGetAggregatedScoresRequest(ctx context.Context, v any, md metadata.MD) (any, error) {
	var (
		message *get_by_categoriespb.GetAggregatedScoresRequest
		ok      bool
	)
	{
		if message, ok = v.(*get_by_categoriespb.GetAggregatedScoresRequest); !ok {
			return nil, goagrpc.ErrInvalidType("get by categories", "getAggregatedScores", "*get_by_categoriespb.GetAggregatedScoresRequest", v)
		}
		if err := ValidateGetAggregatedScoresRequest(message); err != nil {
			return nil, err
		}
	}
	var payload *getbycategories.GetAggregatedScoresPayload
	{
		payload = NewGetAggregatedScoresPayload(message)
	}
	return payload, nil
}
