// Code generated by goa v3.18.2, DO NOT EDIT.
//
// get by categories gRPC server
//
// Command:
// $ goa gen go-scores/design

package server

import (
	"context"
	getbycategories "go-scores/gen/get_by_categories"
	get_by_categoriespb "go-scores/gen/grpc/get_by_categories/pb"

	goagrpc "goa.design/goa/v3/grpc"
	goa "goa.design/goa/v3/pkg"
)

// Server implements the get_by_categoriespb.GetByCategoriesServer interface.
type Server struct {
	GetAggregatedScoresH goagrpc.UnaryHandler
	get_by_categoriespb.UnimplementedGetByCategoriesServer
}

// New instantiates the server struct with the get by categories service
// endpoints.
func New(e *getbycategories.Endpoints, uh goagrpc.UnaryHandler) *Server {
	return &Server{
		GetAggregatedScoresH: NewGetAggregatedScoresHandler(e.GetAggregatedScores, uh),
	}
}

// NewGetAggregatedScoresHandler creates a gRPC handler which serves the "get
// by categories" service "getAggregatedScores" endpoint.
func NewGetAggregatedScoresHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, DecodeGetAggregatedScoresRequest, EncodeGetAggregatedScoresResponse)
	}
	return h
}

// GetAggregatedScores implements the "GetAggregatedScores" method in
// get_by_categoriespb.GetByCategoriesServer interface.
func (s *Server) GetAggregatedScores(ctx context.Context, message *get_by_categoriespb.GetAggregatedScoresRequest) (*get_by_categoriespb.GetAggregatedScoresResponse, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "getAggregatedScores")
	ctx = context.WithValue(ctx, goa.ServiceKey, "get by categories")
	resp, err := s.GetAggregatedScoresH.Handle(ctx, message)
	if err != nil {
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*get_by_categoriespb.GetAggregatedScoresResponse), nil
}
